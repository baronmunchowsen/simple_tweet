<?php
// $Id$
/**
 * Simple Tweet Module
 */
 
/**
 * Constants
 */ 
define('SIMPLE_TWEET_PAGE', variable_get('simple_tweet_tweets_path', ''));
define('SIMPLE_TWEET_PAGENAME', variable_get('simple_tweet_page_title', 'Our Tweets From Twitter'));

/**
 * Implementation of hook_menu()
 */
function simple_tweet_menu(){
  $items = array();
  $items['admin/settings/simple-tweet'] = array(
    'title' => t('Simple Tweet Settings'),
    'access arguments' => array('administer simple tweet'),
    'description' => t('Simple Tweet Settings and Configuration Page'),
    'page callback' => drupal_get_form,
    'page arguments' => array('simple_tweet_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'simple_tweet.admin.inc',
  );
  $items[SIMPLE_TWEET_PAGE] = array(
    'title' => SIMPLE_TWEET_PAGENAME,
    'access arguments' => array('see tweets'),
    'description' => 'Twitter Tweets Page',
    'page callback' => simple_tweet_show_tweets,
  );
  return $items;
}

/**
 * Implementation of hook_perm
 */
function simple_tweet_perm() {
  return array('administer simple tweet', 'see tweets');
}

/**
 * Implementation of hook_block
 * This has 2 different blocks. One for only one tweet
 * and one for multiple tweets.
 */
function simple_tweet_block($op = 'list', $delta = 0, $edit = array()) {
  $block_tweets = variable_get('simple_tweet_block_number',"1");
  switch($op) {
	  //list
	  case 'list': 
		$blocks[0] = array(
		  'info' => t('Latest Tweets - Multiple Tweets Block'),
		  'status' => FALSE,
		);
		$blocks[1] = array(
		  'info' => t('Latest Tweet - Single Tweet Block'),
		  'status' => FALSE,
		);
		return $blocks;
		break;
		
	  //configure
	  case 'configure':
		return $form;
		break;
	  
	  //view & default
	  case 'view': default:
		switch ($delta) {
		  case 0:
			$block['subject'] = t('Latest Tweets');
			$twitters = _simple_tweet_get_twitters();
			$block['content'] = theme('simple_tweet_list', $twitters, $block_tweets);
			break;
		  case 1:
			$block['subject'] = t('Latest Tweet');
			$twitters = _simple_tweet_get_twitters();
			//the variable here is different on the end because there is only one tweet.
			$block['content'] = theme('simple_tweet_list', $twitters, 1);
			break;
		} //end switch
		return $block;
	}
}

/**
 * Callback Functions
 */
function simple_tweet_show_tweets() {
  $twitters = _simple_tweet_get_twitters();
  return theme('simple_tweet_list', $twitters, NULL);
}

/**
 * Implementation of hook_theme
 *
 * @return array of theme functions
 */
function simple_tweet_theme() {
  return array(
  'simple_tweet_list' => array('arguments' => array('twitters' => NULL, 'number' => NULL)),
  'simple_tweet_tweet' => array('arguments' => array('twit' => NULL)),
  );
}

/**
 * theme_simple_tweet_list - format a list of tweets
 *
 * @param object $twitters
 * @param int $number
 * @return string
 */
function theme_simple_tweet_list($twitters, $number = NULL) {
  $op = '';
  if($number != '1') $op .= '<div class="simple-tweet-timeline">';
  $count = 0;
  foreach ($twitters->status as $twit) {
    if(!$number || ($count < $number)) {
      $op .= theme('simple_tweet_tweet', $twit);
    } 
    $count++;
  }
  if($number != '1') $op .= '</div>';
  return $op;
}

/**
 * theme_simple_tweet_tweet - format an individual tweet
 *
 * @param object $twit
 * @return string
 */
function theme_simple_tweet_tweet($twit) {
  $date = _simple_tweet_format_date($twit->created_at);
  $text = _simple_tweet_process_links($twit->text);
  $op = '<div class="simple-tweet">';
  $op .= '<div class="simple-tweet-created">'. $date .'</div>';
  $op .= '<div class="simple-tweet-msg">'. $text .'</div>'; 
  $op .= '</div>';
  return $op;
}

/**
 * Get Tweets
 */
function _simple_tweet_get_twitters() {
  //set variables
  $user_name = variable_get('simple_tweet_username', '');
  $user_name_at = '@'.$user_name;
  $user_pass = variable_get('simple_tweet_password', '');
  $login = $user_name.':'.$user_pass;
  $target = "http://twitter.com/statuses/user_timeline.xml";
  if(!$user_pass) {
    drupal_set_message(t('Please set your twitter username and password'), 'error'); 
  }
  //retrieve from twitter
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $target);
  curl_setopt($ch, CURLOPT_USERPWD, $login);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
   
  $gettwit = curl_exec($ch);
  
  //parse the data
  if($gettwit) { $twitters = new SimpleXMLElement($gettwit); }
  
  curl_close($ch);
  
  return $twitters;
}

/**
 * Process Links in Tweets
 */
function _simple_tweet_process_links($text) {
	$text = preg_replace("#(^|[\n ])([\w]+?://[\w]+[^ \"\n\r\t< ]*)#", "\\1<a href=\"\\2\">\\2</a>", $text);
    $text = preg_replace("#(^|[\n ])((www|ftp)\.[^ \"\t\n\r< ]*)#", "\\1<a href=\"http://\\2\">\\2</a>", $text);
	$text = preg_replace("#(^|[\n ])@([^ \"\t\n\r<]*)#ise", "'\\1<a href=\"http://www.twitter.com/\\2\" target=\"_blank\">@\\2</a>'", $text);  
	$text = preg_replace("#(^|[\n ])\#([^ \"\t\n\r<]*)#ise", "'\\1<a href=\"http://hashtags.org/search?query=\\2\" target=\"_blank\">#\\2</a>'", $text);
	return $text;
}

/**
 * Format Dates in Tweets
 */
function _simple_tweet_format_date($date) {
   $date = strtotime($date);
   $type = variable_get('simple_tweet_dateformat', 'medium');
   $system = array('small', 'medium', 'large');
   if(!in_array($type, $system)) {
     $format = variable_get('date_format_'.$type, 'medium');
     $type = 'custom';
     return format_date($date, $type, $format);
   } else {
     return format_date($date, $type);
   }
}